apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.app.name }}-deployment
  labels:
    app: {{ .Values.app.name }}
spec:
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  replicas: {{ .Values.app.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.app.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.app.name }}
        environment: {{ .Values.app.environment }}
    spec:
      imagePullSecrets:
        - name: {{ .Values.app.image.pullSecret }}
      containers:
        - name: {{ .Values.app.name }}
          image: {{ .Values.app.image.name }}
          imagePullPolicy: {{ .Values.app.image.pullPolicy }}
          envFrom:
          - secretRef:
              name: {{ .Values.app.envSecretRef }}
          livenessProbe:
            httpGet:
              path: /health/live
              port: 80
              scheme: HTTP         
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health/ready
              port: 80
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
          ports:
            - containerPort: 8080
          resources:
            limits:
              memory: "2Gi"
              cpu: "2000m"
            requests:
              memory: "512Mi"
              cpu: "1000m"
